<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: SciView | Zientzilaria]]></title>
  <link href="http://zientzilaria.heroku.com/blog/categories/sciview/atom.xml" rel="self"/>
  <link href="http://zientzilaria.heroku.com/"/>
  <updated>2012-04-10T09:22:34-04:00</updated>
  <id>http://zientzilaria.heroku.com/</id>
  <author>
    <name><![CDATA[Paulo Nuin]]></name>
    <email><![CDATA[nuin@genedrift.org]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SciView, part 6: interview with Dr Roderic Page]]></title>
    <link href="http://zientzilaria.heroku.com/blog/2007/11/19/sciview-part-6-interview-with-dr-roderic-page/"/>
    <updated>2007-11-19T13:29:47-05:00</updated>
    <id>http://zientzilaria.heroku.com/blog/2007/11/19/sciview-part-6-interview-with-dr-roderic-page</id>
    <content type="html"><![CDATA[<h2>This edition of SciView features Dr Roderic Page from the University of Glasgow. Among other things, Dr Page was the editor of the Current Protocols in Bioinformatics, is the Editor in Chief of Systematic Biology, is an avid <a href="http://taxonomy.zoology.gla.ac.uk/rod/rod.html">blogger</a> and is the developer of TreeView, a phylogenetic tree visualization software. I had the opportunity to ask him about his bioinformatics work and his views on science. I would like to thank Dr Page. </h2>

<p><em>In your blog (<a href="http://iphylo.blogspot.com/">iPhylo</a>) an usual topic is the management and flow of information in Biology/Phylogenetics. In your opinion what are the main  hurdles of this subject in science? With the ever increasing amount of  generated information, databases, scientific publications, do you think that we will reach a stage where it won't be possible to stay afloat in a sea of data?</em></p>

<p>RP- Well I think we are well past the floating stage! What I think would be cool would be a service like Google News that automatically aggregates<br/>
stories (for "stories" read "papers and data)" and summarises the Zeitgeist. This wouldn't be overly hard to do. <a href="http://www.ubio.org/index.php?pagename=ubioRSS">uBio</a> has a service that classifies RSS feeds from journals by taxon. Imagine taking that, together with newly added GenBank sequences, and clustering the feeds by various topics. Then display that using a treemap (analogous to  Marcos Weskamp's <a href="http://marumushi.com/apps/newsmap/">newsmap</a>). You could get an "at a glance" view of what is going on.</p>

<p>This is a bit of a half-baked idea, but it relies on things that are becoming more and more available: stable identifiers, and services that<br/>
provide data (and/or links between data). I think these are the two key things that will help us manage the flood of data. Without identifiers we will struggle to realise when we are talking about the same thing (witness the frustration with <a href="http://www.nodalpoint.org/2006/12/15/buggotea_redundant_links_in_connotea">redundant links in Connotea</a>, even though much of Connotea's core functionality relies on stable identifiers), and services give us means to extract and manipulate data. We are slowly moving away from relying sole on web links, or thinking that merely "putting something on the web" is good enough.</p>

<p>Lastly, I've often argued that in some fields, such as phylogenetics, the days of the journal are numbered. I think what we really need is a database that can generate "reports" that function as a journal article (i.e., the contributor gets a citable paper), but where the submission process is primarily one of submitting data and protocols. Many papers in phylogenetics are of the sort "I think group x is way kewl, I grabbed gene y, used program z, and here is my tree". Why not submit these straight to a database, instead of what we have now, which is the original data (e.g., alignments) and trees are usually lost? Databases such as TreeBASE that largely collect data after publication are sparsely populated, hence much valuable data and results are locked up in PDFs on journal web sites. Every month a weighty copy of Molecular Phylogenetics and Evolution lands on my desk, and the wasted data and trees makes me want to cry.</p>

<p><em>This is an identical question I asked Joe Felsenstein (with a twist): Lately two big projects related to phylogenetics are getting some steam: the Tree of Life and the DNA barcoding. I am more aware of the latter, due to the fact that I attended a presentation about it and through a friend that woks on the project. I think that the goals of the DNA barcoding are great for the field, wet-lab and theoretical scientists. What is your opinion about this type of project that tries to address all subjects in a big umbrella? Wouldn't the support of a larger number of small projects be better? How would this type of projects can contribute to the information management and flow?</em></p>

<p>RP - Barcoding is the simplest of the two "big projects" -- it's a simple idea (and one that has been employed by microbiologists for decades), applied to things that we can see with the naked eye. As with all of these things, there's been much hype, controversy, and heated debate. My own sense is that much of this is dying down, and certainly most articles in journals like Systematic Biology are investigating the performance of barcoding methods, rather than engaging in philosophical or political debate. I think barcoding will generate a lot of data, much of which will be useful, probably in ways we don't expect. We will have standardised genetic samples taken at a known place at a known time from organisms whose identity is either known or can be inferred. I'm struggling to see why this isn't a good thing.</p>

<p>My sense is that large projects don't always scale well. You don't get 10x more out of a project simply because it has 10x as much money. You get administrative layers, and a lot of politics. If the big project is really lots of little ones, then it may well succeed. Barcoding is really lots of little projects -- everybody grabs their favourite beastie and sequences it. There aren't any great technological or intellectual challenges. I think the real problem is when the project has big goals, articulates a grand vision, then struggles to deliver. I suspect <a href="http://www.phylo.org">CIPRES</a> is an example of a large project that hasn't delivered quite as much as it promised. My biggest fear is that the <a href="http://eol.org">Encyclopedia of Life</a> may end up in this category.</p>

<p><em>You have three different blogs, iPhylo, iSpecies and bioGUID, but none of them are, what I can call, Open Science. Would you consider endeavouring in this new trend and opening up your scientific activities?</em></p>

<p>RP - You missed one blog -- <a href="http://semant.blogspot.com">http://semant.blogspot.com</a>. I guess it depends what you mean by "Open Science." These blogs are pretty open about the success and failure of various projects, and I don't shy away from thinking out aloud. In some cases suggestions I've made in the blogs have been taken up and explored further by others. The Pygmybrowse widget to display large trees in a small space is a recent example.</p>

<p>For some time I've done things like post final reports on research grants online, as well as manuscripts that didn't make it into print (these are now available in Nature Precedings).</p>

<p>Not all the code I write is available. Some projects, like the <a href="http://taxonomicsearch.sourceforge.net/">Taxonomic Search Engine</a> and <a href="http://myphpbib.sourceforge.net/">MyPHPBib</a> are hosted on SourceForge, and <a href="http://darwin.zoology.gla.ac.uk/~rpage/treeviewx/">TreeView X</a> is also open source (code available from my site, and as part of the Debian repository). Other stuff is sometimes so experimental and fluid that it would be more trouble than it is worth to package it nicely. Some legacy code uses libraries that are not Open Source and hence can't be distributed. That said, I'm looking at hosting current projects (such as <a href="http://bioguid.info">http://bioguid.info</a>) on Google Code. Since 2005 anything which I've published as first author has been Open Access, and any software or data described in those papers is Open Source.</p>

<p><em>Sometime ago, in the Nature Network's Bioinformatics group someone was asking about good protocols in the field. Can you tell us about the Current Protocols in Bioinformatics, which is was edited by you? How content is added to it and how frequent are the updates?</em></p>

<p>RP - I'm no longer involved with <a href="http://www.currentprotocols.com/WileyCDA/CPTitle/isbn-0471250937.html">Current Protocols</a>. It was a great project to be involved with as it opened my eyes to the breadth of the field, and I got free trips to the US to meet with the other editors (I'm easily bought). Eventually I just had too many other commitments (it overlapped with being editor of <a href="http://systbiol.org">Systematic Biology</a>), so I left the board.</p>

<p>Content is commissioned by the editorial board, who each handle 2-3 topic areas. Updates come out every three months. If you have the print version (currently two massive ring binders), then you have the fun task of inserting new sections and removing old content.</p>

<p><em>What do you think is the importance of protocols in Bioinformatics? Isn't bioinformatics a field more dynamic than cytogenetics and molecular biology for instance?</em></p>

<p>RP - This is an interesting point. I think there are some protocols which are  widely used and are reasonably stable over time (BLAST searching, for example), and others which either are short lived (the software keeps changing, or the question being addressed by the protocol looses its relevance). In some ways Current Protocols is an old fashioned way of providing information on how to do things. A wiki may be more appropriate, certainly it could be more dynamic, and ideally free. However, one could ask whether a wiki would have acquired the same degree of authority as the Current Protocols, which could assemble a board of people with broad expertise and experience, pay contributors for their work, provide copy editing and other editorial assistance, plus give a commitment to maintain and update the publication.</p>

<p><em>Another question that is already favourite of this interview series is about computer graphic interfaces. TreeView(X) is a very important application in Phylogenetics and it is basically interface only, as the main focus is to display phylogenetic trees. Usually, a good percentage of messages sent to Paup's discussion list are somewhat related to TreeView. What in your opinion is the importance of a graphical interface for a biologist?</em></p>

<p>RP - Well, unless you only use Lynx as your web browser, and vi to edit text, then I think the importance of the graphical interface is pretty much self evident! I think graphical user interfaces are desirable in two sets of circumstances: (1) the software is infrequently used, or (2) the user is not a "power user". When I was at Oxford a colleague told me that he liked graphical interfaces because, after weeks in the field, the last thing he needed was to have to learn (or relearn) some garbled syntax in order to analyse his hard-won data. I've also seen the difference a graphical interface can make when teaching students -- you want to keep the mechanics of using the software out of the way and let them focus on what they are actually doing (and why they are doing it).</p>

<p>Of course, graphical interfaces can get in the way as soon as you want to do something not originally thought of by the person who wrote the program. This is one reason why David Swofford's PAUP* is a model of flexible software. There is an elegant GUI (sadly fully available on Mac Classic only, although the Windows version has some of the essential features such as the spinning cursor and the PAUP Monaco font, both things I ported across a decade ago), and the command-line interface for batch processing.</p>

<p><em>Continuing on TreeView(X), your latest version is pure wxWidgets. Why did you choose this framework to develop TreeViewX? Why not QT or Java or another GUI framework? How TreeViewX is different to the initial version of TreeView?</em></p>

<p>The short answer is that I have a lot of code written in C++, and I haven't the time nor inclination to learn Java. When Java come along in the early '90's it's big selling point was cross-platform portability. Well, it didn't support the Mac terribly well, and I had my own C++ class libraries that worked natively on Windows and Macs, so there was no incentive to use it. Until fairly recently most Java applications I've seen are sluggish and/or poorly designed. When the time came to look at supporting Linux (around 2000), Qt wasn't an option because it wasn't free on Windows, and didn't support the Mac. So, wxWidgets was the logical choice, although it took a while for the Mac version to be usable.</p>

<p>TreeView X differs from TreeView in being Open Source, and available for Windows, Mac OS X, Linux, and other forms of Unix. It lacks some of the nicer features of the original TreeView (which only runs on Windows and Macs), mainly because I haven't had time to add them, and my own work has focussed more on web application development. Like many people who program, the software I write addresses problems I'm interested in at the time, so if my interests change, the software may languish.</p>

<p><em>In your opinion what is your greatest contribution to science. A software, a publication...</em></p>

<p>RP - I don't think there's any easy way to answer that. Let me respond by breaking it down into three categories. What contribution was the most fun, what was the most satisfying, and what do I think people will associate with me?</p>

<p>The most fun I've had is blogging, or to be more precise, trying to make connections between different areas such as bioinformatics, biodiversity informatics, systematics, digital libraries, and the Semantic Web. My hope is that readers of blogs like iPhylo will get something out of it, but ultimately I don't particularly care because, hell, I'm having a ball.</p>

<p>In terms of satisfaction, I enjoyed working on mincut supertrees. This was a change of topic (aggregating small phylogenies into one large "supertree"), required programming algorithms (rather than, say, graphical interfaces), and was my first introduction to the world of publishing in the computer science literature (the joys of LaTeX, and the requirement of having your paper accepted for publication BEFORE you could give a talk). It was also one of the best refereeing experiences I've had, because one diligent referee read my source code and pointed out that what I said I was doing in the manuscript and what my code actually did were not quite the same thing (I guess you'd call this an example of "Open Science").</p>

<p>But, if your question is what will people associate with me, then I think that is the work on "historical associations", namely genes and species, hosts and parasites, and areas and phylogenies. Making the case that these are all equivalent questions, and could be approached using the same algorithm, is probably the thing I could point to as being the thing that I have have done that was "significant".</p>

<hr />

<p>I would like to thank Dr Page for taking the time to answer my questions.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New SciView interview coming.]]></title>
    <link href="http://zientzilaria.heroku.com/blog/2007/10/30/new-sciview-interview-coming/"/>
    <updated>2007-10-30T16:01:13-04:00</updated>
    <id>http://zientzilaria.heroku.com/blog/2007/10/30/new-sciview-interview-coming</id>
    <content type="html"><![CDATA[<p>Stay tuned.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SciView in PDF]]></title>
    <link href="http://zientzilaria.heroku.com/blog/2007/08/16/sciview-in-pdf/"/>
    <updated>2007-08-16T16:52:12-04:00</updated>
    <id>http://zientzilaria.heroku.com/blog/2007/08/16/sciview-in-pdf</id>
    <content type="html"><![CDATA[<p>I am preparing a PDF file with all five interviews so far, in a stylish format.</p>

<p>It will be ready next week and widely available for download.</p>

<p><em>Clearly it has been LONG delayed a bit. I will try soon.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SciView part 5: interview with Alexei Drummond]]></title>
    <link href="http://zientzilaria.heroku.com/blog/2007/08/11/sciview-part-5-interview-with-alexei-drummond/"/>
    <updated>2007-08-11T09:53:56-04:00</updated>
    <id>http://zientzilaria.heroku.com/blog/2007/08/11/sciview-part-5-interview-with-alexei-drummond</id>
    <content type="html"><![CDATA[<p>We are back with more interviews. This time it is Dr Alexei Drummond's take on Science and everything that surrounds it. Apart from his academic work, Alexei is Chief Scientist of <a href="http://www.biomatters.com">Biomatters</a> the developers of <a href="http://blindscientist.genedrift.org/2007/03/02/geneious-one-year-or-almost-later/">Geneious</a> (and <a href="http://blindscientist.genedrift.org/2007/02/26/hello-world/">here</a>). Enjoy.</p>

<hr />

<p><em>You are Biomatters' Chief-Scientist, one of the founders of the company and the mastermind behind Geneious. What was your motivation to start the company and develop the program? How to balance these activities with your regular job as a university professor?</em></p>

<p>I would say that my main motivations for wanting to build Geneious were frustration and hope. I was frustrated at the number of molecular biologists who didn't seem to have the software tools they needed to do their job. I was hopeful I could provide the framework for those tools, if only I had a few great programmers.</p>

<p>Since I was one of the only people in the department who could program, I was often asked to write scripts, or teach people how to program enough so they could do it themselves. When biologists start asking about where they can learn to program a computer, just so they can do their job you know something is wrong! Most of the things they wanted to do were reasonably straightforward. It seemed to me that these kind of basic productivity problems had been solved in other workplaces like the office -- so why had they not been solved in the research laboratory? I initially wanted to build the system as an academic research project -- but then realized that would fail at a number of levels. Firstly, software development isn't science -- but science now crucially relies on software development and support. Secondly, most academic programmers are not interested in (or good at) designing user interfaces, and certainly developing software is not a scientific outcome that gets recognized like publishing papers does. Thirdly, academics are quite bad at supporting software and documenting it. So it seemed to me, that for a lot of reasons, a professional software company was the best avenue to realize a software system that would dramatically improve the productivity of molecular biologists by putting bioinformatics at their fingertips. Really I just wanted to make science go faster -- and with less hassle.</p>

<p>_ Geneious is a Java application? Why Java? Any special feature in the language or previous experience? Is there anything that you wish Java was capable of so you can include in Geneious?_</p>

<p>Java is a general-purpose programming language -- so you can do in Java pretty much anything you can do in software. The main reason for choosing Java is that it is very easy to write sophisticated user interfaces that run on Windows, Linux and Mac OS X. This is really important in the field of molecular biology where about 20% of the users have Mac OS X. Earlier versions of Java didn't integrate with some aspects of different operating systems as well as they could, but with Java 5 most of this integration is quite good. Also, more and more academic developers are using Java (because it is easy, cross-platform and OO) so that also works in our favor. Every language has its pros and cons, but  for our purposes Java was one of the best choices.</p>

<p><em>You are the first scientist outside North America that is interviewed here. You have worked for some years in Oxford, UK. What are the main differences of working in New Zealand in comparison to Europe? How your return to New Zealand has influenced your decision to start the company?</em></p>

<p>New Zealand is a very small country with just 4 million people. But we are a proud nation. But we have a long history of world firsts, like being the first country to give woman the right to vote (1893). A New Zealander was the first to "split the atom" (Ernest Rutherford), and a New Zealander was the first to the top of Mt Everest (Sir Edmund Hillary). We are also one of the first countries to declare ourselves a Nuclear-Free Zone (1985). So I would say that New Zealand is a place the is not afraid to try to lead the way, despite our small size. Our Prime Minister, Helen Clark, recently declared our Government's aspiration to make New Zealand a carbon-neutral country. It is these kinds of radical ideas that we strive to make reality. So it is quite natural to try to build a unique software package in New Zealand -- although we are still far from where we are aiming to be.</p>

<p>_In your opinion what are the main differences of developing applications in academia and in the private sector?
_</p>

<p>Academics develop software for the love of it -- and their first aim is to make the software work for themselves, and secondarily to work for their colleagues, as long as that doesn't take too much effort. There are a few academics that try very hard to produce easy-to-use well-supported software, but they tend not to have the resources to do what the private sector can - for example PAUP<em> still doesn't have a manual after many many years. The challenge for the private sector developing </em>scientific* software, is how to keep abreast of the science, which is changing so rapidly. At Biomatters we really try to have the idea that we are part of the scientific community. We have invited a number of scientist to work with us on various projects and we find that in this way we learn a lot more about what is needed, and how best we can fit into the academic ecology. Our goal is a happy marriage where academic programmers can get on with developing great new algorithms, and Geneious can provide the interoperability, the user interface and the support.</p>

<p><em>What would you teach to an "academic developer"? What developers in academia lack when compared to developers working in companies?</em></p>

<p>I don't think it is a question of what academic developers lack in terms of skills -- I think it is more a question of motivation. Aside from Geneious I produce academic software (like BEAST). What motivates me to answer 100 technical email queries every month about the BEAST software? My main passion is science, not supporting software. So by creating a successful software package, I have created a heavy burden of support. I would rather that somebody else supported all the simple questions about user interface, file conversion, installation, et cetera... So in some sense, what I am hoping to "teach" academic developers is that maybe there is another way to do things. It we had one framework that made interoperability and user interface more seamless and standard, each academic could focus on the science, the new algorithms and the part of their job that they find really exciting -- the discovery.</p>

<p><em>Another question that is already favourite of this interview series is about computer graphic interfaces. Geneious has a very nice GUI, but in my opinion still lacks some simple features. Can you tell us how the program's GUI was first designed and what kind of user input is considered in the development? Which is more important: "what the user want" or "what we want"?</em></p>

<p>Most users didn't say they wanted the mouse, or the iPod before the visionary told them they wanted it. So I do think there is room for a lot of innovation in software development. But of course, there are definitely things that users know that they need right now. Balancing these two things is the real trick. Biomatters is very serious about listening to our users and we have an active forum and a small group of power users that have been quite helpful in the past. Of course there is always more to do. We also think that we have introduced a few nice new ideas in our software and there are more on the way. Specifically we are interested in developing the concept of "live" research publications, where arrival of relevant new data automatically updates the published research in that area. As you can imagine, this is a long term goal. But I think you need these visions to aim for, if you are going to make real progress.</p>

<p><em>For the young bioinformatician: should s/he focus on publications, skills, languages? Or a balance of all? What is your advice?</em></p>

<p>A young bioinformatician should focus on the science. What are the outstanding questions that your skills enable you to take a step towards answering? Once you focus on the science the publications, skills and languages will come.</p>

<p>I used to program ten different languages very well. But 95% of my programming these days is done in Java (because I am usually building on stuff I have done previously). PERL is still quite important in bioinformatics -- but I think that is because there is still a lot of need to write one-off scripts. Will we get to a point where there is more sophistication? I think that bioinformatics has to become a field where people without programming skills can contribute substantially. I would argue that all of the programmers in bioinformatics should be working very hard to program themselves out of their jobs (and into more satisfying jobs). Lets build software systems that take this field to the next level. That is what we am trying to do (slowly but surely) with Geneious. We want to create a system that ultimately makes the programmers redundant -- at least for the menial tasks -- so that any molecular biologist can construct complicated queries and analyses in an intuitive graphical manner. Then the programmers can focus on the hard questions like new algorithms and methods of analysis.</p>

<p><em>What in your opinion is your most important software?</em></p>

<p>I don't really compare my software projects, because they are so different. I guess this is for other people to decide. But judging from you line of questioning, Geneious is currently winning ;-)</p>

<hr />

<p>I would like to thank Alexei for answering my questions.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SciView: part 4, interview with Rosie Redfield]]></title>
    <link href="http://zientzilaria.heroku.com/blog/2007/07/26/sciview-part-4-interview-with-rosie-redfield/"/>
    <updated>2007-07-26T21:05:18-04:00</updated>
    <id>http://zientzilaria.heroku.com/blog/2007/07/26/sciview-part-4-interview-with-rosie-redfield</id>
    <content type="html"><![CDATA[<p>Dr Redfield, from the University of British Columbia is a microbiologist and an advocate of Open Science, a rather recent movement that is trying to open the doors (and computers) of every scientific lab. I took the opportunity to ask her about her views of Open Science and why to create an scientific diary online. I would like to thank Dr Redfield for the opportunity.</p>

<hr />

<p><em>My initial questions are about Open Science. What are the main benefits of opening your whole scientific life to the public? And the drawbacks of doing this? How is the best way to manage a lab under Open Science?</em></p>

<p>RR: There are practical consequences and philosophical consequences to doing open science the way we are.  So far the practical consequences have been good - I get helpful suggestions from people I've never met. And I can tell people who wonder what we're doing to take a look at the stuff on our web pages.  I'd love to also be able to say that our open approach has attracted collaborators and new lab members, but that hasn't happened yet.  Another big practical consequence is that writing blog posts about the research I'm working on helps me think clearly about it. So whenever I'm feeling muddled I post the problem on my blog.</p>

<p>Philosophically it just feels right. Science is fundamentally a collaborative endeavour; we all build on what others have done.  Just as the web gives us new and better ways to publish our findings in peer-reviewed journals, it lets us find out communicate about our work in progress.  Furthermore, the taxpayer pays for our work, and deserves to be able to see what's going on.  So I like to think of random people stumbling onto my blog and thinking "Hmm, so that's what a scientist really does.".</p>

<p>Also, openness is much easier and more comfortable than secrecy. In my teaching (mostly first-year biology) I give only open-book exams, and it's much easier for me than worrying about cheaters.</p>

<p><em>I can see on your webpage that you have grant applications, results and even future plans listed. Do you fear having your ideas and plans "stolen"? You might have some data and results that end up on the webpage/blog only after the publication or everything is uploaded as soon as it out of the oven?</em></p>

<p>RR: I blog about the day-to-day research we're doing, and I post our grant proposals as soon as they're submitted.  So everything is open from the start.</p>

<p>I don't worry much about people stealing our ideas, but it's not a big risk because nobody else is working on what we're working on. And most of the people doing related work seem to think I'm more-or-less misguided in my interests and approaches. I try not to post exactly the same figures I'm putting into a manuscript (only because I fear the journal editors might get cranky), but otherwise my goal is to give anyone who's interested an accurate picture of what we're doing.</p>

<p><em>The visibility of scientific blogs has increased considerably in the past years. Yours is up for almost an year now (at least your archives go back to August 2006) and it seems that you support that your whole group of students and post-docs do the same. What have influenced you to start recording your daily routine on a website? Does it help the interaction in the lab since everyone has its own personal page?</em></p>

<p>RR: I started blogging about research in response to a post by Pedro Beltrao (http://pbeltrao.blogspot.com/2006/07/opening-up-scientific-process-during.html) about the desirability of opening up the scientific process (I found it through Tangled Bank #59). As soon as I read it I realized that I wanted to have a blog about my lab's research.</p>

<p>After a couple of weeks I told everyone in my lab that I wanted them to have blogs too.  I love reading their blogs - they have such thoughtful things to say about their research.  They don't always post as often as I'd like them to; they say it's because they feel there's a high standard that they can only sometimes reach. But I'd like them to at least scribble a few lines every day.</p>

<p><em>From your blog it is easy to see some frustration with bioinformatics. How important is bioinformatics in your research and what the major problems that you have with it?</em></p>

<p>RR: It's a collection of important tools and resources, and I love what I can do. And I enjoy learning new things, like babytalk Perl and standalone BLAST. But Unix has always driven me crazy - I keep hoping to attract a Unix/Perl geek to the lab, but no luck so far.</p>

<p>My bioinformatics frustrations arise in two ways.  First, it's only part of what we do, so I'm not doing it nearly enough to get really good at it.  If bioinformatics was the main focus of our work I would invest more of my brain in improving my skills.  But we're primarily an experimental lab (we get our hands wet). And each time I go back to it,  NCBI or TIGR has changed their interfaces.</p>

<p>The other source of frustration is that we're always trying to do new things, that nobody has ever done before,  Sometimes we can find existing tools that can do these things, but sometimes we have to write our own and we don't really know what we're doing.  For a while we were lucky enough to have Mario Pineda-Krch working with us, but he's gone on to better things (see http://pineda-krch.com/).</p>

<p><em>Another question that is already favourite of this interview series is about computer graphic interfaces. From what I could see your lab generates most of its scripts in Perl, but some work is done with graphical interfaces. What do you and your group look for in a program and its graphic interface? What are the main drawbacks of the command line interface that could be easily mitigated by a GUI?</em></p>

<p>RR: By graphic interfaces do you mean things like the web interfaces for BLAST? Basically we'll take whatever we can get. If the resource has a nice point-and-click interface, great. If we have to submit a string of instructions to get what we need, we can cope. If we'd need to write some software ourselves, we usually move on to a different problem unless we're highly motivated and the problem looks simple. I hate the frustration of not getting line commands exactly right, so much prefer menu-driven interfaces.</p>

<p>The only good interface we've generated was done by Mario, working on the fabulous hotspot paradox.</p>

<p><em>How do you see the "publish or perish" in science, with the increasing number of retracted papers, fake results, rushed publications and sometimes publication of extremely similar results in different papers and journals? Being an advocate of Open Science, do you think this new movement can help alleviate some of the known problems of the "publish or perish" culture?</em></p>

<p>RR: There's always been a lot of bad science mixed in with the good; I'm not convinced that the proportion has gotten higher as the total number  of papers has increased.</p>

<p><em>Do you have an advice for the young scientist? And, as you are the first woman interviewed here, any special advice for the girls that are considering a scientific career?</em></p>

<p>RR: Work by women is unconsciously but systematically undervalued by everyone (including the women who do it), so don't go into science for the glory.  But if you love doing research it's wonderful.  I'm still delighted that I can get paid to do this.</p>

<p><em>What in your opinion is your most important publication?</em></p>

<p>RR: That's a hard one.  I don't get much recognition for what I think is important, mostly because my conclusions don't fit what others want to hear.</p>

<hr />

<p>I would like to thank again for Dr Redfield's answers. I am planning some changes to SciView soon.</p>

<p>If you want to follow the RRResearch blog, here is the <a href="http://rrresearch.blogspot.com/">link</a>.</p>
]]></content>
  </entry>
  
</feed>
